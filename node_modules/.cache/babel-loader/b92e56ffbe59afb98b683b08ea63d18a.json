{"ast":null,"code":"var _jsxFileName = \"/Users/hasancan/Desktop/examples/theme-example/src/theme/ThemeProvider.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useMemo, useContext } from \"react\";\nimport { ThemeProvider as StyledThemeProvider } from \"styled-components\";\nimport { colors } from \"./colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let ThemeType;\n\n(function (ThemeType) {\n  ThemeType[\"Light\"] = \"light\";\n  ThemeType[\"Dark\"] = \"dark\";\n})(ThemeType || (ThemeType = {}));\n\nexport let StatusBarStyle;\n\n(function (StatusBarStyle) {\n  StatusBarStyle[\"Light\"] = \"light-content\";\n  StatusBarStyle[\"Dark\"] = \"dark-content\";\n})(StatusBarStyle || (StatusBarStyle = {}));\n\nexport const ThemeContext = /*#__PURE__*/createContext({\n  theme: {\n    colors: colors.light,\n    selectedTheme: ThemeType.Dark\n  },\n  handleChangeTheme: () => {}\n});\nexport function ThemeProvider(_ref) {\n  _s();\n\n  let {\n    children,\n    defaultTheme\n  } = _ref;\n  const [selectedTheme, setSelectedTheme] = useState(defaultTheme || ThemeType.Light);\n\n  const handleChangeTheme = theme => {\n    setSelectedTheme(state => {\n      if (theme) {\n        return theme;\n      }\n\n      if (state === ThemeType.Dark) {\n        return ThemeType.Light;\n      } else {\n        return ThemeType.Dark;\n      }\n    });\n  };\n\n  const theme = useMemo(() => ({\n    colors: colors[selectedTheme],\n    selectedTheme\n  }), [selectedTheme]);\n  const statusBarStyle = useMemo(() => {\n    return selectedTheme === ThemeType.Dark ? StatusBarStyle.Light : StatusBarStyle.Dark;\n  }, [selectedTheme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      handleChangeTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(StyledThemeProvider, {\n      theme: theme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeProvider, \"NVdvz825vq6SYxpMegp1sI2fv80=\");\n\n_c = ThemeProvider;\nexport default ThemeProvider;\nexport function useTheme() {\n  _s2();\n\n  const {\n    theme,\n    handleChangeTheme: changeTheme\n  } = useContext(ThemeContext);\n  return {\n    theme,\n    changeTheme\n  };\n}\n\n_s2(useTheme, \"Xt8gwZo0yHVfv97jXtHAY3oLbyo=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useMemo","useContext","ThemeProvider","StyledThemeProvider","colors","ThemeType","StatusBarStyle","ThemeContext","theme","light","selectedTheme","Dark","handleChangeTheme","children","defaultTheme","setSelectedTheme","Light","state","statusBarStyle","useTheme","changeTheme"],"sources":["/Users/hasancan/Desktop/examples/theme-example/src/theme/ThemeProvider.tsx"],"sourcesContent":["import React, { createContext, useState, useMemo, useContext } from \"react\";\nimport {\n  DefaultTheme,\n  ThemeProvider as StyledThemeProvider,\n} from \"styled-components\";\nimport { colors } from \"./colors\";\n\nexport enum ThemeType {\n  Light = \"light\",\n  Dark = \"dark\",\n}\n\nexport enum StatusBarStyle {\n  Light = \"light-content\",\n  Dark = \"dark-content\",\n}\n\nexport const ThemeContext = createContext<AppTheme>({\n  theme: {\n    colors: colors.light as Palette,\n    selectedTheme: ThemeType.Dark,\n  },\n  handleChangeTheme: () => {},\n});\n\ninterface IThemeProviderProps {\n  children: JSX.Element[] | JSX.Element;\n  defaultTheme?: ThemeType;\n}\n\nexport function ThemeProvider({ children, defaultTheme }: IThemeProviderProps) {\n  const [selectedTheme, setSelectedTheme] = useState<ThemeType>(\n    defaultTheme || ThemeType.Light\n  );\n\n  const handleChangeTheme = (theme?: ThemeType) => {\n    setSelectedTheme((state?: ThemeType) => {\n      if (theme) {\n        return theme;\n      }\n      if (state === ThemeType.Dark) {\n        return ThemeType.Light;\n      } else {\n        return ThemeType.Dark;\n      }\n    });\n  };\n\n  const theme = useMemo(\n    () => ({\n      colors: colors[selectedTheme] as Palette,\n      selectedTheme,\n    }),\n    [selectedTheme]\n  );\n\n  const statusBarStyle = useMemo(() => {\n    return selectedTheme === ThemeType.Dark\n      ? StatusBarStyle.Light\n      : StatusBarStyle.Dark;\n  }, [selectedTheme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, handleChangeTheme }}>\n      <StyledThemeProvider theme={theme as DefaultTheme}>\n        {children}\n      </StyledThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default ThemeProvider;\n\nexport function useTheme() {\n  const { theme, handleChangeTheme: changeTheme } = useContext(ThemeContext);\n  return { theme, changeTheme };\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,OAAzC,EAAkDC,UAAlD,QAAoE,OAApE;AACA,SAEEC,aAAa,IAAIC,mBAFnB,QAGO,mBAHP;AAIA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,WAAYC,SAAZ;;WAAYA,S;EAAAA,S;EAAAA,S;GAAAA,S,KAAAA,S;;AAKZ,WAAYC,cAAZ;;WAAYA,c;EAAAA,c;EAAAA,c;GAAAA,c,KAAAA,c;;AAKZ,OAAO,MAAMC,YAAY,gBAAGT,aAAa,CAAW;EAClDU,KAAK,EAAE;IACLJ,MAAM,EAAEA,MAAM,CAACK,KADV;IAELC,aAAa,EAAEL,SAAS,CAACM;EAFpB,CAD2C;EAKlDC,iBAAiB,EAAE,MAAM,CAAE;AALuB,CAAX,CAAlC;AAaP,OAAO,SAASV,aAAT,OAAwE;EAAA;;EAAA,IAAjD;IAAEW,QAAF;IAAYC;EAAZ,CAAiD;EAC7E,MAAM,CAACJ,aAAD,EAAgBK,gBAAhB,IAAoChB,QAAQ,CAChDe,YAAY,IAAIT,SAAS,CAACW,KADsB,CAAlD;;EAIA,MAAMJ,iBAAiB,GAAIJ,KAAD,IAAuB;IAC/CO,gBAAgB,CAAEE,KAAD,IAAuB;MACtC,IAAIT,KAAJ,EAAW;QACT,OAAOA,KAAP;MACD;;MACD,IAAIS,KAAK,KAAKZ,SAAS,CAACM,IAAxB,EAA8B;QAC5B,OAAON,SAAS,CAACW,KAAjB;MACD,CAFD,MAEO;QACL,OAAOX,SAAS,CAACM,IAAjB;MACD;IACF,CATe,CAAhB;EAUD,CAXD;;EAaA,MAAMH,KAAK,GAAGR,OAAO,CACnB,OAAO;IACLI,MAAM,EAAEA,MAAM,CAACM,aAAD,CADT;IAELA;EAFK,CAAP,CADmB,EAKnB,CAACA,aAAD,CALmB,CAArB;EAQA,MAAMQ,cAAc,GAAGlB,OAAO,CAAC,MAAM;IACnC,OAAOU,aAAa,KAAKL,SAAS,CAACM,IAA5B,GACHL,cAAc,CAACU,KADZ,GAEHV,cAAc,CAACK,IAFnB;EAGD,CAJ6B,EAI3B,CAACD,aAAD,CAJ2B,CAA9B;EAMA,oBACE,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAE;MAAEF,KAAF;MAASI;IAAT,CAA9B;IAAA,uBACE,QAAC,mBAAD;MAAqB,KAAK,EAAEJ,KAA5B;MAAA,UACGK;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAvCeX,a;;KAAAA,a;AAyChB,eAAeA,aAAf;AAEA,OAAO,SAASiB,QAAT,GAAoB;EAAA;;EACzB,MAAM;IAAEX,KAAF;IAASI,iBAAiB,EAAEQ;EAA5B,IAA4CnB,UAAU,CAACM,YAAD,CAA5D;EACA,OAAO;IAAEC,KAAF;IAASY;EAAT,CAAP;AACD;;IAHeD,Q"},"metadata":{},"sourceType":"module"}